#!/usr/bin/env python
'''
Usage: bam2bw [options] -b <bam> -c <chromSize> -o <bw>

Options:
    -b <bam>        input bam
    -o <bw>         output bigwig
    -c <chromSize>  chromosome size
    --no-fill       do not fill zero at sites of no data
    --no-norm       do not normalize by library size
    -x <extra>      extra options passed to `bedtools genomecov`, [default: ]
'''

from __future__ import print_function
import sys
import signal
import logging
signal.signal(signal.SIGPIPE, signal.SIG_DFL)
logging.basicConfig(
        level=logging.DEBUG,
        format='%(asctime)s; %(levelname)s; %(funcName)s; %(message)s',
        datefmt='%y-%m-%d %H:%M:%S')
import os
import tempfile
import subprocess as sbp

def main(args):
    logging.info(args)
    bamFn = args['b']
    bwFn = args['o']
    chromSize = args['c']
    extraOpt = args['x']

    if not args['no-fill']:
        bgOpt = '-bga'
    else:
        bgOpt = '-bg'

    if not args['no-norm']:
        n = sbp.check_output('sambamba view -c {}'.format(bamFn), shell=True, executable='/bin/bash')
        scale = 1e6/int(n)
    else:
        scale = 1.0

    bdgFh,bdgFn = tempfile.mkstemp()

    cmd1 = 'bedtools genomecov -ibam {bam} -g {chromSize} -scale {scale} {bgOpt} {extraOpt} > {bdgFn}'.format(
            bam=bamFn, chromSize=chromSize, scale=scale, bgOpt=bgOpt, extraOpt=extraOpt, bdgFn=bdgFn)
    sbp.check_call(cmd1, shell=True, executable='/bin/bash')
    cmd2 = 'bedGraphToBigWig {bdg} {chromSize} {bw}'.format(bdg=bdgFn, chromSize=chromSize, bw=bwFn)
    try:
        sbp.check_call(cmd2, shell=True, executable='/bin/bash')
    except CalledProcessError as e:
        raise(e)
    finally:
        os.remove(bdgFn)

    logging.info('Done')
    return 0

if __name__ == '__main__':
    from docopt import docopt
    args = docopt(__doc__)
    args = {k.lstrip('-<').rstrip('>'):args[k] for k in args}
    try:
        main(args)
    except KeyboardInterrupt:
        logging.warning('Interrupted')
        sys.exit(1)
