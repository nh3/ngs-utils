#!/usr/bin/env python
'''
Set bigwig resolution

Usage: bwRes [options] [-r <res>] (<input>) (<output>)

Options:
    <input>         input linear bigwig
    <output>        output bigwig
    -r <res>        resolution [default: 10]
    --debug         print debug information
'''

from __future__ import print_function
import sys
import signal
import logging
signal.signal(signal.SIGPIPE, signal.SIG_DFL)
import numpy as np
import pyBigWig

def main(args):
    logging.debug(args)
    res = int(args['r'])
    tol = 1e-16

    iBW = pyBigWig.open(args['input'])
    sortedChroms = sorted([chrom for chrom in iBW.chroms()])
    oBW = pyBigWig.open(args['output'], 'w')
    oBW.addHeader([(chrom,iBW.chroms(chrom)) for chrom in sortedChroms])
    for chrom in sortedChroms:
        logging.debug(chrom)
        L = iBW.chroms(chrom)
        x = iBW.values(chrom, 0, L, numpy=True)
        n = np.floor(L/res).astype(int)
        N = n*res
        xm = np.nanmean(x[0:N].reshape((n,res)), axis=1)
        x[0:N] = np.repeat(xm, res)
        x[np.logical_or(np.isnan(x), np.isinf(x))] = -1
        k = np.where(np.abs(np.diff(x))>tol)[0] + 1
        s = np.insert(k,0,0)
        e = np.append(k,L)
        v = x[e-1]
        u = (v != -1)
        m = v[u].shape[0]
        oBW.addEntries(np.array([chrom]*m), s[u], ends=e[u], values=v[u])
    oBW.close()
    iBW.close()
    logging.info('done')


if __name__ == '__main__':
    from docopt import docopt
    args = docopt(__doc__)
    args = {k.lstrip('-<').rstrip('>'):args[k] for k in args}
    try:
        if args.get('debug'):
            logLevel = logging.DEBUG
        else:
            logLevel = logging.WARN
        logging.basicConfig(
                level=logLevel,
                format='%(asctime)s; %(levelname)s; %(funcName)s; %(message)s',
                datefmt='%y-%m-%d %H:%M:%S')
        if args.get('prof'):
            import cProfile
            cProfile.run('main(args)')
        else:
            main(args)
    except KeyboardInterrupt:
        logging.warning('Interrupted')
        sys.exit(1)
